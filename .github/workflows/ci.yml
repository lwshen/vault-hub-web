name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: "1.24"
          cache: true
      - name: Install dependencies
        run: go mod download
      - name: Verify dependencies
        run: go mod verify
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1.6
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          package_json_file: ./apps/web/package.json
          run_install: false
      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: "22"
          cache: pnpm
          cache-dependency-path: ./apps/web/pnpm-lock.yaml
      - name: Install frontend dependencies
        working-directory: ./apps/web
        run: pnpm install
      - name: Check frontend format
        working-directory: ./apps/web
        run: pnpm typecheck && pnpm lint
      - name: Build frontend
        working-directory: ./apps/web
        run: pnpm build
      - name: Run tests
        run: |
          export JWT_SECRET=secret
          export ENCRYPTION_KEY=test-encryption-key-for-ci
          go test -v ./...
      - name: Build backend
        run: |
          VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "dev")
          COMMIT=$(git rev-parse --short HEAD)
          LDFLAGS="-X github.com/lwshen/vault-hub/internal/version.Version=${VERSION} -X github.com/lwshen/vault-hub/internal/version.Commit=${COMMIT}"

          # Linux builds
          GOOS=linux GOARCH=amd64 go build -ldflags="$LDFLAGS" -o bin/vault-hub-server-linux-amd64 apps/server/main.go
          GOOS=linux GOARCH=arm64 go build -ldflags="$LDFLAGS" -o bin/vault-hub-server-linux-arm64 apps/server/main.go

          # Windows builds
          GOOS=windows GOARCH=amd64 go build -ldflags="$LDFLAGS" -o bin/vault-hub-server-windows-amd64.exe apps/server/main.go

          # macOS builds
          GOOS=darwin GOARCH=amd64 go build -ldflags="$LDFLAGS" -o bin/vault-hub-server-darwin-amd64 apps/server/main.go
          GOOS=darwin GOARCH=arm64 go build -ldflags="$LDFLAGS" -o bin/vault-hub-server-darwin-arm64 apps/server/main.go
      - name: Build CLI
        run: |
          VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "dev")
          COMMIT=$(git rev-parse --short HEAD)
          LDFLAGS="-X github.com/lwshen/vault-hub/internal/version.Version=${VERSION} -X github.com/lwshen/vault-hub/internal/version.Commit=${COMMIT}"

          # Linux builds
          GOOS=linux GOARCH=amd64 go build -ldflags="$LDFLAGS" -o bin/vault-hub-cli-linux-amd64 apps/cli/main.go
          GOOS=linux GOARCH=arm64 go build -ldflags="$LDFLAGS" -o bin/vault-hub-cli-linux-arm64 apps/cli/main.go

          # Windows builds
          GOOS=windows GOARCH=amd64 go build -ldflags="$LDFLAGS" -o bin/vault-hub-cli-windows-amd64.exe apps/cli/main.go

          # macOS builds
          GOOS=darwin GOARCH=amd64 go build -ldflags="$LDFLAGS" -o bin/vault-hub-cli-darwin-amd64 apps/cli/main.go
          GOOS=darwin GOARCH=arm64 go build -ldflags="$LDFLAGS" -o bin/vault-hub-cli-darwin-arm64 apps/cli/main.go
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vault-hub-server
          path: |
            bin/
            internal/embed/dist
